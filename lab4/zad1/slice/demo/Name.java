// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Demo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package demo;

public class Name implements java.lang.Cloneable, java.io.Serializable
{
    public String firstName;

    public String lastName;

    public Name()
    {
        firstName = "";
        lastName = "";
    }

    public Name(String firstName, String lastName)
    {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Name _r = null;
        if(rhs instanceof Name)
        {
            _r = (Name)rhs;
        }

        if(_r != null)
        {
            if(firstName != _r.firstName)
            {
                if(firstName == null || _r.firstName == null || !firstName.equals(_r.firstName))
                {
                    return false;
                }
            }
            if(lastName != _r.lastName)
            {
                if(lastName == null || _r.lastName == null || !lastName.equals(_r.lastName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::demo::Name");
        __h = IceInternal.HashUtil.hashAdd(__h, firstName);
        __h = IceInternal.HashUtil.hashAdd(__h, lastName);
        return __h;
    }

    public Name
    clone()
    {
        Name c = null;
        try
        {
            c = (Name)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(firstName);
        __os.writeString(lastName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        firstName = __is.readString();
        lastName = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, Name __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Name
    __read(IceInternal.BasicStream __is, Name __v)
    {
        if(__v == null)
        {
             __v = new Name();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Name __nullMarshalValue = new Name();

    public static final long serialVersionUID = -963271905L;
}
